" =============================================================================  
" Vim Configuration
" =============================================================================  
" 
" The guiding principle of this .vimrc is to be reasonably minimal and to 
" depend on external plugins to do as much work as possible.  
"
" Vim configuration is a journey, not a destination, this code changes on a
" regular basis as I learn knew ways of doing things.
"
"
" Basic Information
" -----------------
"
" <leader> is remapped to `,`
"
"
" Plugins
" -------
"
" Plugins are managed via vim-plug https://github.com/junegunn/vim-plug
"
" Install/update the current plugins with
" 
"   :PlugInstall 
"
"
" Workflow
" --------
"
" * Run vim inside tmux
" * Primarily developing in multiple splits
"   * inspired by vimvcasts http://vimcasts.org/episodes/working-with-windows/
" * Slowly transitioning from opening / finding files to <C-p> like tools
"
"
" Filetype Extensions
" -------------------
"
" vim/after/ftplugin/haskell.vim
" vim/after/ftplugin/make.vim
" vim/after/ftplugin/markdown.vim
" vim/after/ftplugin/plaintex.vim
" vim/after/ftplugin/python.vim

call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdcommenter'     " Comments
Plug 'scrooloose/nerdtree'          " File browser
"Plug 'scrooloose/syntastic'         " Linter / style checker
Plug 'wombat256.vim'                " Color scheme
Plug 'godlygeek/tabular'            " Anything to table-like structure
Plug 'bling/vim-airline'            " Make the ruler into something more
Plug 'majutsushi/tagbar'            " ctags integration
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'kien/ctrlp.vim'
Plug 'lepture/vim-jinja'
Plug 'tpope/vim-fireplace'
Plug 'kien/rainbow_parentheses.vim'
call plug#end()

syntax on
let mapleader=","   " the leader command should be a comma rather than a slash
set nocompatible
set tabstop=4       " tabstop every 4 'spaces'
set shiftwidth=4    " shiftwidth the same as a single tabstop
set softtabstop=4
set expandtab       " tab to spaces
set visualbell      " prevent beeps
set laststatus=2    " always show modeline
set textwidth=0
set linebreak       " linebreak at words
set nowrap          " default is not to wrap
set wildignore=*.pyc,*.o,*.so,*.os " reduce noise browsing for files
set spelllang=en_au
set spellfile=$HOME/.vimspell.add
set t_Co=256
set nu
syntax spell toplevel

try
    colorscheme wombat256mod
catch
endtry

" Filetype remappings
" These could be in ftdetect, but ok here for now
au BufRead,BufNewFile,BufFilePost *.md set filetype=markdown
au BufRead,BufNewFile,BufFilePost */SConscript set filetype=python
au BufRead,BufNewFile,BufFilePost */SConstruct set filetype=python

" Airline modifications
set ttimeoutlen=50
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#whitespace#enabled = 0

" On Mac, make sure that we're using homebrews ctags
" rather than the default version
let g:tagbar_ctags_bin = '~/homebrew/bin/ctags'
" <leader>c code browser
nmap <leader>c :TagbarToggle<CR>

" Split navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" reload configuration
map <leader>v :sp $MYVIMRC<CR>
vmap <C-c> :w !pbcopy<CR><CR>

map <leader>l :set nu!<CR>
map <leader>e :Errors<CR>

" <leader>p toggles paste mode (for content pasted from non-vim sessions)
map <leader>p :set paste!<CR>

" <leader>f file browser 
nmap <leader>f :NERDTreeToggle<CR>

if isdirectory('/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1')
    set path+=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1
endif

set makeprg=scons\ -u 
